{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","_utils/isResponseError.ts","_utils/normalizeMovieData.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onSearch","currentSearchTerm","currentSearchCount","onFind","isLoading","isError","onAddMovie","htmlFor","type","id","placeholder","cn","onChange","e","target","value","onClick","disabled","App","useState","setMovies","setSearchTerm","setSearchCount","currentMovie","setCurrentMovie","setError","setLoading","term","prevCount","query","url","fetch","then","res","json","data","catch","Response","Error","getMovie","movieData","normalizedMovie","Title","Plot","Poster","imdbID","normalizeMovieData","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10cb4f86.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface FindMovieProps {\n  onSearch: (term: string) => void;\n  currentSearchTerm: string;\n  currentSearchCount: number;\n  onFind: () => void;\n  isLoading: boolean;\n  isError: boolean;\n  onAddMovie: (movie: Movie) => void;\n  movie: Movie | null;\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = (\n  {\n    onSearch,\n    currentSearchTerm,\n    currentSearchCount,\n    onFind,\n    isLoading,\n    isError,\n    onAddMovie,\n    movie,\n  },\n) => {\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': isError })}\n              onChange={(e) => onSearch(e.target.value)}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"button\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              onClick={onFind}\n              disabled={!currentSearchTerm}\n            >\n              {currentSearchCount > 0 ? 'Search Again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { normalizeMovieData } from './_utils/normalizeMovieData';\nimport { isResponseError } from './_utils/isResponseError';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [currentSearchTerm, setSearchTerm] = useState<string>('');\n  const [currentSearchCount, setSearchCount] = useState(0);\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState<boolean>(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSearch = (term: string) => {\n    setSearchTerm(term);\n  };\n\n  const handleFind = () => {\n    setLoading(true);\n    setSearchCount(prevCount => prevCount + 1);\n    getMovie(currentSearchTerm)\n      .then(movieData => {\n        if (isResponseError(movieData)) {\n          setError(true);\n        } else {\n          setError(false);\n          const normalizedMovie = normalizeMovieData(movieData);\n\n          setCurrentMovie(normalizedMovie);\n          setLoading(false);\n          // ... handle movie data\n        }\n      })\n      .catch(() => {\n        setError(true);\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (currentMovie !== null) {\n      const isAlreadyAdded = movies.some(\n        movie => movie.imdbId === currentMovie.imdbId,\n      );\n\n      if (!isAlreadyAdded) {\n        setMovies(prevMovies => [...prevMovies, currentMovie]);\n      }\n\n      setCurrentMovie(null);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onSearch={handleSearch}\n          currentSearchTerm={currentSearchTerm}\n          currentSearchCount={currentSearchCount}\n          onFind={handleFind}\n          onAddMovie={handleAddMovie}\n          movie={currentMovie}\n          isLoading={isLoading}\n          isError={isError}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b6f7cb18';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  const url = `${API_URL}&t=${query}`;\n\n  return fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      return data;\n    })\n    .catch(() => {\n      return {\n        Response: 'False',\n        Error: 'unexpected error',\n      };\n    });\n}\n","import { MovieData } from '../types/MovieData';\nimport { ResponseError } from '../types/ReponseError';\n\nexport function isResponseError(\n  data: MovieData | ResponseError,\n): data is ResponseError {\n  return (data as ResponseError).Response === 'False';\n}\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport function normalizeMovieData(movieData: MovieData): Movie {\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster !== 'N/A'\n      ? movieData.Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}/`,\n    imdbId: movieData.imdbID,\n  };\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}